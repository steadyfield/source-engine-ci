#! /usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os
#import vpc_parser

top = '.'
PROJECT_NAME = 'updater'

def options(opt):
	# stub
	return

def configure(conf):
	return

def build(bld):
	if bld.env.DEST_OS == 'android':
		return

	#print(vpc_parser.parse_vpcs( bld.env, ["../QCGenerator/qcgenerator_launcher.vpc"], '../..' ))
	
	source = [
        'main.cpp'
        ]
	includes = [
        '../../public/',
        '../../public/tier0',
        ]
	defines = ["UPDATER"]
	libs = ["USER32"]
	install_path = bld.env.BINDIR
	bld(
		source   = source,
		target   = PROJECT_NAME+'_'+bld.env.DEST_OS.replace("32","64" if bld.env.DEST_CPU in ['x86_64', 'amd64'] else "32")+("_srcds" if bld.env.DEDICATED else ""),
		name     = PROJECT_NAME+'_'+bld.env.DEST_OS.replace("32","64" if bld.env.DEST_CPU in ['x86_64', 'amd64'] else "32")+("_srcds" if bld.env.DEDICATED else ""),
		features = 'c cxx cxxprogram',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)

