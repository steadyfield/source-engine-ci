#! /usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'lua'

def options(opt):
	# stub
	return

def configure(conf):
	conf.define('DLUA_USE_LINUX',1)

def build(bld):
	source = [
		'src/lcode.c',
		'src/lundump.c',
		'src/lparser.c',
		'src/lzio.c',
		'src/lgc.c',
		'src/ldblib.c',
		'src/ltable.c',
		'src/lobject.c',
		'src/lstrlib.c',
		'src/ltm.c',
		'src/lstate.c',
		'src/lfunc.c',
		'src/lua.c',
		'src/llex.c',
		'src/liolib.c',
		'src/lcorolib.c',
		'src/ltablib.c',
		'src/ldebug.c',
		'src/lmem.c',
		'src/lauxlib.c',
		'src/loslib.c',
		'src/lbaselib.c',
		'src/lmathlib.c',
		'src/ldump.c',
		'src/lopcodes.c',
		'src/linit.c',
		'src/ldo.c',
		'src/lutf8lib.c',
		'src/luac.c',
		'src/loadlib.c',
		'src/lapi.c',
		'src/lstring.c',
		'src/lctype.c',
		'src/lvm.c',
	]

	includes = [
		'src',
		'../common',
		'../public',
		'../public/tier0',
		'../public/mathlib'
	]	

	libs = []

	bld.stlib(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c cxx',
		includes = includes,
		use      = libs,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)

